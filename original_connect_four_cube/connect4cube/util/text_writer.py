from time import sleep

from connect4cube.hardware.cube import Cube

CHARS = {
        'a': ((0, 1, 0),
              (1, 0, 1),
              (1, 1, 1),
              (1, 0, 1),
              (1, 0, 1)),
        'b': ((1, 1, 0),
              (1, 0, 1),
              (1, 1, 0),
              (1, 0, 1),
              (1, 1, 0)),
        'c': ((0, 1, 1),
              (1, 0, 0),
              (1, 0, 0),
              (1, 0, 0),
              (0, 1, 1)),
        'd': ((1, 1, 0),
              (1, 0, 1),
              (1, 0, 1),
              (1, 0, 1),
              (1, 1, 0)),
        'e': ((1, 1, 1),
              (1, 0, 0),
              (1, 1, 1),
              (1, 0, 0),
              (1, 1, 1)),
        'f': ((1, 1, 1),
              (1, 0, 0),
              (1, 1, 1),
              (1, 0, 0),
              (1, 0, 0)),
        'g': ((0, 1, 1),
              (1, 0, 0),
              (1, 1, 1),
              (1, 0, 1),
              (0, 1, 0)),
        'h': ((1, 0, 1),
              (1, 0, 1),
              (1, 1, 1),
              (1, 0, 1),
              (1, 0, 1)),
        'i': ((0, 1, 0),
              (0, 1, 0),
              (0, 1, 0),
              (0, 1, 0),
              (0, 1, 0)),
        'j': ((0, 0, 1),
              (0, 0, 1),
              (0, 0, 1),
              (1, 0, 1),
              (0, 1, 0)),
        'k': ((1, 0, 1),
              (1, 0, 1),
              (1, 1, 0),
              (1, 0, 1),
              (1, 0, 1)),
        'l': ((1, 0, 0),
              (1, 0, 0),
              (1, 0, 0),
              (1, 0, 0),
              (1, 1, 1)),
        'm': ((1, 0, 1),
              (1, 1, 1),
              (1, 0, 1),
              (1, 0, 1),
              (1, 0, 1)),
        'n': ((1, 0, 1),
              (1, 1, 1),
              (1, 1, 1),
              (1, 1, 1),
              (1, 0, 1)),
        'o': ((0, 1, 0),
              (1, 0, 1),
              (1, 0, 1),
              (1, 0, 1),
              (0, 1, 0)),
        'p': ((1, 1, 0),
              (1, 0, 1),
              (1, 1, 0),
              (1, 0, 0),
              (1, 0, 0)),
        'q': ((0, 1, 0),
              (1, 0, 1),
              (1, 0, 1),
              (1, 0, 1),
              (0, 1, 1)),
        'r': ((1, 1, 0),
              (1, 0, 1),
              (1, 1, 0),
              (1, 1, 0),
              (1, 0, 1)),
        's': ((0, 1, 1),
              (1, 0, 0),
              (0, 1, 0),
              (0, 0, 1),
              (1, 1, 0)),
        't': ((1, 1, 1),
              (0, 1, 0),
              (0, 1, 0),
              (0, 1, 0),
              (0, 1, 0)),
        'u': ((1, 0, 1),
              (1, 0, 1),
              (1, 0, 1),
              (1, 0, 1),
              (1, 1, 1)),
        'v': ((1, 0, 1),
              (1, 0, 1),
              (1, 0, 1),
              (1, 0, 1),
              (0, 1, 0)),
        'w': ((1, 0, 1),
              (1, 0, 1),
              (1, 0, 1),
              (1, 1, 1),
              (1, 0, 1)),
        'x': ((1, 0, 1),
              (1, 0, 1),
              (0, 1, 0),
              (1, 0, 1),
              (1, 0, 1)),
        'y': ((1, 0, 1),
              (1, 0, 1),
              (0, 1, 0),
              (0, 1, 0),
              (0, 1, 0)),
        'z': ((1, 1, 1),
              (0, 0, 1),
              (0, 1, 0),
              (1, 0, 0),
              (1, 1, 1)),
        '0': ((0, 1, 0),
              (1, 0, 1),
              (1, 0, 1),
              (1, 0, 1),
              (0, 1, 0)),
        '1': ((0, 1, 0),
              (1, 1, 0),
              (0, 1, 0),
              (0, 1, 0),
              (0, 1, 0)),
        '2': ((0, 1, 0),
              (1, 0, 1),
              (0, 0, 1),
              (0, 1, 0),
              (1, 1, 1)),
        '3': ((1, 1, 0),
              (0, 0, 1),
              (1, 1, 0),
              (0, 0, 1),
              (1, 1, 0)),
        '4': ((1, 0, 1),
              (1, 0, 1),
              (1, 1, 1),
              (0, 0, 1),
              (0, 0, 1)),
        '5': ((1, 1, 1),
              (1, 0, 0),
              (1, 1, 0),
              (0, 0, 1),
              (1, 1, 0)),
        '6': ((0, 1, 0),
              (1, 0, 0),
              (1, 1, 0),
              (1, 0, 1),
              (0, 1, 0)),
        '7': ((1, 1, 1),
              (0, 0, 1),
              (0, 0, 1),
              (0, 1, 0),
              (0, 1, 0)),
        '8': ((0, 1, 0),
              (1, 0, 1),
              (0, 1, 0),
              (1, 0, 1),
              (0, 1, 0)),
        '9': ((0, 1, 0),
              (1, 0, 1),
              (0, 1, 1),
              (0, 0, 1),
              (0, 1, 0)),
        }


class TextWriter:
    def __init__(self):
        self.cube = Cube()

    def draw_character(self, char, pos, color):
        bitmap = CHARS.get(char.lower(), None)
        if bitmap:
            for y in range(len(bitmap[0])):
                for z in range(len(bitmap)-1, -1, -1):
                    if bitmap[4-z][y] == 0:
                        continue
                    if y + pos < 0 or y + pos >= 5:
                        continue
                    self.cube.set_color(4, y + pos, z, *color)

    def clear(self):
        for y in range(5):
            for z in range(5):
                self.cube.set_color(4, y, z, 0, 0, 0)

    def draw_string(self, string, delay):
        for pos in range(-1, len(string)):
            for i in range(4):
                self.clear()
                if pos >= 0:
                    self.draw_character(string[pos], -i, (255, 255, 255))
                if pos + 1 < len(string):
                    self.draw_character(string[pos+1], 4 - i, (255, 255, 255))
                self.cube.show()
                sleep(delay)
